LABORATORIO AUTORENTA














ZULLY FERNANDA ORTIZ AVENDAÑO














DOCENTE














PEDRO FELIPE GÓMEZ BONILLA






























CAMPUSLANDS
SANDBOX
RUTA JAVA
TIBU
2024
Introducción        3
Caso de Estudio        4
Planificación        5
Ejecución        5
Construcción del Modelo Conceptual        5
Descripción        5
Las entidades y atributos        5
Relaciones y Cardinalidades        7
Gráfica        8
Construcción del Modelo Lógico        9
Descripción        9
Relaciones y Cardinalidades        10
Gráfica        12
Normalización del Modelo Lógico        13
Primera Forma Normal (1FN)        13
Descripción        13
Descripción técnica        13
Gráfica        14
Forma Normal (2FN)        15
Descripción        15
Descripción técnica        15
Gráfica        16
Tercera Forma Normal (3FN)        17
Descripción        17
Descripción técnica        17
Gráfica        18
Construcción del Modelo Físico        20
Descripción        20
Construcción del Diagrama UML        23
Descripción        23
Inserciones de Datos        26
Descripción        26












Introducción


En este proyecto se presentará una guía detallada  de la estructura e implementación de una base de datos para la empresa de alquiler de vehículos llamada AutoRenta, donde el objetivo principal es gestionar un sistema de información. 


Primero se realizará un caso de estudio con sus requerimientos específicos, donde a partir de estos análisis se procederá a desarrollar un modelo conceptual detallado donde se identificará las entidades principales, sus atributos y relaciones de todas ellas, donde este paso es realizado para comprender la estructura que se llevará a cabo para la empresa AutoRenta.


Prosiguiendo se realizará la conversión del modelo conceptual al lógico, donde este tiene como función representar de manera más concisa de la organización de toda la base de datos, facilitando si compression, también se aplicará el proceso de normalización hasta la tercera forma normal (3FN) donde se reducira los datos redundantes.


Finalmente  se llevará a cabo la conversión del modelo lógico al modelo físico, el cual definirá las entidades, atributos y relaciones.


Con estos pasos se garantizara un proyecto completo y efectivo para el diseño de los datos de datos para la empresa AutoRenta.












































Caso de Estudio


La empresa Autorenta ha solicitado el desarrollo de un sistema de información para gestionar su operación de alquiler de vehículos. Actualmente, con 5 sucursales en distintas ciudades y planes de expansión, requiere un sistema para gestionar el alquiler de su flota de vehículos. Los clientes podrán recoger un vehículo en una sucursal y devolverlo en otra. Las tarifas se calculan por días y/o semanas según el tipo de vehículo, con posibles descuentos durante el año. Si se excede la fecha de entrega, se aplicará un recargo del 8% por cada día adicional. El sistema busca optimizar la gestión de inventarios, reservas y pagos, mejorando la eficiencia y satisfacción del cliente,  por lo que tendrá los siguientes requerimientos para la elaboración:


* Sucursales:
 ciudad y dirección donde se ubica, teléfono fijo, celular y correo electrónico.


* Empleados:
 sucursal donde labora, cédula, nombres, apellidos, dirección y ciudad de
residencia, celular y correo electrónico.


* Clientes: 
cédula, nombres, apellidos, dirección y ciudad de residencia, celular y correo
Electrónico.


* Vehículos:
 tipo de vehículo, placa, referencia, modelo, puertas, capacidad, sunroof, motor,
Color.


* Alquileres: 
vehículo, cliente, empleado, sucursal y fecha de salida, sucursal y fecha de
llegada, fecha esperada de llegada, valor de alquiler por semana, valor de alquiler por día,
porcentaje de descuento, valor cotizado y valor pagado.
























Planificación
Ejecución
Una vez haya sido analizado toda la información requerida para la elaboración de base de datos de la empresa Autorenta, se inició la elaboración del modelo conceptual, la cual este proceso proporciona un alta descripción donde representará los conceptos principales de la base de datos y las relaciones que hay entre ellos.
Construcción del Modelo Conceptual
Se realizó el Modelo conceptual para identificar cada una de las entidades, sus atributos y las relaciones entre ellas, donde se proporcionó una visión más clara y estructurada de cómo se organizó y conecto los diferentes modelos de la base de dato teniendo en cuenta lo siguiente:


  

Descripción
Las entidades y atributos 


1. Sucursales:


* Id_sucursal.
* Ubicación.
*  Teléfono fijo.
*  Celular.
*  Correo Electronico.


2. Empleados:


*  Id_empleado.
* id_sucursal.
* Cédula.
* Nombres.
* Apellidos.
* Ubicación.
* Celular.
* Correo electrónico. 


3. Vehículos:


* Id_vehiculo.
* Tipo vehiculo.
* Placa.
* Referencia.
* Modelo.
* Puertas.
* Capacidad.
* Sunroof.
* Motor.
* Color.


4. Clientes:


* Id_cliente.
* Cédula.
* Nombres.
* Apellidos.
* Ubicación.
* Celular.
* Correo electrónico. 


5. Alquileres:


* Id_alquiler.
* Id_vehiculo.
* Id_empleado.
* Id_sucursal.
* Fecha salida
* Fecha esperada entrega.
* Fecha entrega.
* Valor cotizado.
* Valor pagado.


6. tipo_vehiculo:


* Id_tipo_vehiculo.
* Tipo 
* Valor_alquiler_dia.
* Valor_alquiler_semana.


7. Descuento:


* Id_descuento.
* Id_tipo_vehiculo
* Fecha_inicio
* Fecha_fin
* porcentaje _descuento.
Relaciones y Cardinalidades


1. Sucursales - Empleados:
* Relación: “Tiene”, Un sucursal tiene varios empleados y un empleado tiene una sucursal.
* Cardinalidad: 1-N (uno a muchos).


2. Empleados - Alquileres:
* Relación: “Adquirir”,Un empleado puede adquirir varios alquileres y un alquiler puede ser adquirido por un empleado. 
* Cardinalidad: 1:N (uno a muchos).


3. Vehículo - Alquileres:
* Relación: ‘Alquilar’, Un vehículo puede ser alquilado varias veces y en cada alquiler se puede alquilar un vehículo.
* Cardinalidad: 1:N (uno a muchos).


4. Tipo_vehiculo - vehiculo:
* Relación: ‘Pertenece’, Muchos vehículos le pertenecen a un tipo de vehículo y un tipo vehículo le pertenece a muchos vehículos. 
* Cardinalidad: 1:N (Uno a muchos).


5. Tipo_vehiculo - descuento:
* Relación: ‘Obtener’,  Un tipo de vehículo puede tener un descuento y un descuento está relacionado con un tipo de vehículo.
* Cardinalidad: 1:1 (Uno a uno ).
6. Clientes - Alquileres: 
* Relación: ‘Realizar,  Un cliente puede realizar varios alquileres pero un alquiler solo lo puede hacer un cliente.
* Cardinalidad: 1:N (Uno a Muchos ).
 


 


Gráfica
  





























Construcción del Modelo Lógico


Se realizó el modelo lógico teniendo en cuenta el modelo conceptual, donde se incorporaron detalles más específicos como las características de cada atributo, incluidas las claves primarias, foráneas y las relaciones de cardinalidad.
Descripción




1. Sucursales:


* Id_sucursal int primary key.
* Ubicación varchar(50).
*  Teléfono fijo int.
*  Celular int.
*  Correo Electronico varchar(50).


2. Empleados:


* Id_empleado int primary key.
* Id_sucursal foreign key.
* Cédula int.
* Nombres varchar(50).
* Apellidos varchar(50).
* Ubicación varchar(50).
* Celular int.
* Correo electrónico varchar(50). 


3. Vehículos:


* Id_vehiculo primary key.
* Tipo vehículo varchar(50).
* Placa varchar(50).
* Referencia int.
* Modelo varchar(50).
* Puertas int.
* Capacidad int.
* Sunroof varchar(50).
* Motor varchar(50).
* Color varchar(50).






4. Clientes:


* Id_cliente primary key.
* Cédula int.
* Nombres varchar(50).
* Apellidos varchar(50).
* Ubicación varchar(50).
* Celular int.
* Correo electrónico varchar(50). 


5. Alquileres:


* Id_alquiler Primary key.
* Id_vehiculo foreign key.
* Id_empleado foreign key.
* Id_sucursa foreign key.
* Fecha salida Date
* Fecha esperada entrega date.
* Fecha entrega Date
* Valor cotizado int.
* Valor pagado int.




6. tipo_vehiculo:


* Id_tipo_vehiculo Primary key.
* Tipo varchar(50). 
* Valor_alquiler_dia Date.
* Valor_alquiler_semana Date.


7. Descuento:


* Id_descuento Primary key.
* Id_tipo_vehiculo
* Fecha_inicio Date.
* Fecha_fin Date.
* porcentaje _descuento double.


Relaciones y Cardinalidades
Se realizó las relaciones y cardinalidades respectivas del modelo lógico con sus entidades para tener mejor visualización de la base de datos: 




1. Sucursales - Empleados:
* Una sucursal tiene varios empleados y un empleado tiene una sucursal. 1-N (uno a muchos).


  

2. Empleados - Alquileres:
* Un empleado puede adquirir varios alquileres y un alquiler puede ser adquirido por un empleado. 1:N (uno a muchos).


  





3. Vehículo - Alquileres:
* Un vehículo puede ser alquilado varias veces y en cada alquiler se puede alquilar un vehículo. 1:N (uno a muchos).


  

4. Tipo_vehiculo - vehiculo:
* Muchos vehículos le pertenece a un tipo de vehiculo y un tipo vehículo le pertenece a muchos vehículos.  1:N (Uno a muchos).


  



5. Tipo_vehiculo - descuento:
* Un tipo de vehículo puede tener un descuento y un descuento está relacionado con un tipo de vehículo. 1:1 (Uno a uno ).


  



6. Clientes - Alquileres:
* Un cliente puede realizar varios alquileres pero un alquiler solo lo puede hacer un cliente. 1:N (Uno a muchos).


  







Gráfica


  













































Normalización del Modelo Lógico


Se realizó el proceso de la normalización de las tablas anteriormente visualizadas para
organizar los datos de manera más eficiente,minimizando redundancias y dependencias
transitivas en la base de datos en desarrollo.


Primera Forma Normal (1FN)
Una tabla está en 1FN si cumple con los siguientes criterios:
* Cada atributo debe tener valores atómicos.
* Cada fila la misma tabla debe ser única
* Debe prevalecer un crecimiento vertical de los datos y no horizontal
* No deben existir grupos repetidos de datos.


Descripción
La primera forma normal es el primer nivel de normalización en base de datos donde se le aplicará a las tablas de las bases de datos para garantizar una mejor organización donde se evita redundancias y asegurará la consistencia de la información.


Descripción técnica
1. Sucursales:
❖  No encuentra en 1FN, ya que cada  columna no tiene valores únicos y son repetitivos pero cuenta con una clave primaria única.


2.  Empleados :
❖No encuentra en 1FN, ya que cada  columna no tiene valores únicos y son repetitivos pero cuenta con una clave primaria única.


      3. Clientes :
❖ No encuentra en 1FN, ya que cada  columna no tiene valores únicos y son repetitivos pero cuenta con una clave primaria única.


      4. Alquileres :
❖ No encuentra en 1FN, ya que cada  columna no tiene valores únicos y son repetitivos pero cuenta con una clave primaria única.


      5.          Vehiculos:
❖ No encuentra en 1FN, ya que cada  columna no tiene valores únicos y son repetitivos pero cuenta con una clave primaria única.


      6.  Descuentos:
❖ No encuentra en 1FN, ya que cada  columna no tiene valores únicos y son repetitivos pero cuenta con una clave primaria única.


       7.  Tipo_vehiculo:
❖ No encuentra en 1FN, ya que cada  columna no tiene valores únicos y son repetitivos pero cuenta con una clave primaria única.




Gráfica


Sucursales
	id_sucursal
	titulo
	ciudad
	dirección
	telefono_fijo
	Celular
	correo_electronico
	PK
	

	

	

	

	

	

	





Empleados
	id_empleado
	id_sucursal
	cedula
	nombre1
	nombre2
	apellido1
	apellido2
	ciudad
	ubicación
	celular
	correo_electronico
	PK
	FK
	

	

	

	

	

	

	

	

	

	



Clientes
	id_cliente
	cedula
	nombre1
	nombre2
	apellido1
	apellido2
	ciudad
	ubicación
	celular
	correo_electronico
	PK
	

	

	

	

	

	

	

	

	

	



Alquileres
	id_alquiler
	id_sucursal
	id_empleado
	id_vehiculo
	valor_pagado
	valor_cotizado
	fecha_entrega
	fecha_esperada_entrega
	fecha_salida
	PK
	FK
	FK
	FK
	

	

	

	

	

	



Vehiculos
	id_vehiculo
	id_tipo_vehiculo
	id_sucursal
	placa
	modelo
	sunroof
	referencia
	puerta
	capacidad
	color
	motor
	PK
	FK
	FK
	

	

	

	

	

	

	

	

	



Descuento
	id_descuento
	id_tipo_vehiculo
	fecha_inicio
	fecha_fin
	porcentaje_descuento
	PK
	FK
	

	

	

	



Tipo_vehiculo
	id_tipo_vehiculo
	valor_alquiler_semanal
	valor_alquiler_dia
	tipo
	PK
	

	

	

	

Forma Normal (2FN)
Una tabla está en 2FN si cumple con los siguientes criterios:
* Estar en 1FN.
* La relación debe tener una clave principal, de preferencia simple.
* Cada atributo de la tabla debe depender totalmente del atributo clave.


Descripción
La segunda forma normal, es el segundo nivel de normalización en el diseño de la base de
datos que se aplicará a las tablas de una base de datos que ya cumplen con la primera forma
normal y lleva a cabo la eliminación de dependencias parciales dentro de una tabla.


Descripción técnica
1.  Sucursales :
❖   Se encuentra en 2FN, ya que cuenta con una clave primaria única y cada
La columna depende completamente de esa clave primaria.


2.  Empleados :
❖  Se encuentra en 2FN, ya que cuenta con una clave primaria única y cada
La columna depende completamente de esa clave primaria.


3. Clientes :
❖  Se encuentra en 2FN, ya que cuenta con una clave primaria única y cada
La columna depende completamente de esa clave primaria.


4.  Alquileres :
❖  Se encuentra en 2FN, ya que cuenta con una clave primaria única y cada
La columna depende completamente de esa clave primaria.


5. Vehiculos:
❖  Se encuentra en 2FN, ya que cuenta con una clave primaria única y cada
La columna depende completamente de esa clave primaria.


6.  Descuento:
❖  Se encuentra en 2FN, ya que cuenta con una clave primaria única y cada
La columna depende completamente de esa clave primaria.


7. Tipo_vehiculo:
❖  Se encuentra en 2FN, ya que cuenta con una clave primaria única y cada
La columna depende completamente de esa clave primaria.




Gráfica


Sucursales
	id_sucursal
	titulo
	ciudad
	dirección
	telefono_fijo
	Celular
	correo_electronico
	PK
	

	

	

	

	

	

	



Empleados
	id_empleado
	id_sucursal
	cedula
	nombre1
	nombre2
	apellido1
	apellido2
	ciudad
	ubicación
	celular
	correo_electronico
	PK
	FK
	

	

	

	

	

	

	

	

	

	

Clientes
	id_cliente
	cedula
	nombre1
	nombre2
	apellido1
	apellido2
	ciudad
	ubicación
	celular
	correo_electronico
	PK
	

	

	

	

	

	

	

	

	

	

Alquileres
	id_alquiler
	id_sucursal
	id_empleado
	id_vehiculo
	valor_pagado
	valor_cotizado
	fecha_entrega
	fecha_esperada_entrega
	fecha_salida
	PK
	FK
	FK
	FK
	

	

	

	

	

	







Vehiculos
	id_vehiculo
	id_tipo_vehiculo
	id_sucursal
	placa
	modelo
	sunroof
	referencia
	puerta
	capacidad
	color
	motor
	PK
	FK
	FK
	

	

	

	

	

	

	

	

	

Descuento
	id_descuento
	id_tipo_vehiculo
	fecha_inicio
	fecha_fin
	porcentaje_descuento
	PK
	FK
	

	

	

	



Tipo_vehiculo
	id_tipo_vehiculo
	valor_alquiler_semanal
	valor_alquiler_dia
	tipo
	PK
	

	

	

	



Tercera Forma Normal (3FN)
Una tabla está en 3NF si cumple con los siguientes criterios:
* Debe estar en 2FN.
* No deben existir atributos no principales que dependen transitivamente del atributo clave.


Descripción
La tercera forma normal, es el tercer nivel de normalización en el diseño de la base de datos
que se aplicará a las tablas de una base de datos que ya cumplen con la segunda forma
normal y se enfoca en la eliminación de dependencias transitivas, evitando que un atributo no
clave depende de otro no clave.


Descripción técnica


1.  Sucursales :
❖    Se encuentra en 3FN, ya que está en la 2FN y en cada columna no hay
dependencias transitivas con la clave primaria.


2. Empleados :
❖   Se encuentra en 3FN, ya que está en la 2FN y en cada columna no hay
dependencias transitivas con la clave primaria.


3. Clientes :
❖   Se encuentra en 3FN, ya que está en la 2FN y en cada columna no hay
dependencias transitivas con la clave primaria.


4. Alquileres :
❖   Se encuentra en 3FN, ya que está en la 2FN y en cada columna no hay
dependencias transitivas con la clave primaria.


5. Vehiculos:
❖   Se encuentra en 3FN, ya que está en la 2FN y en cada columna no hay
dependencias transitivas con la clave primaria.


6.  Descuento:
❖  Se encuentra en 3FN, ya que está en la 2FN y en cada columna no hay
dependencias transitivas con la clave primaria.


7. Tipo_vehiculo:
❖   Se encuentra en 3FN, ya que está en la 2FN y en cada columna no hay
dependencias transitivas con la clave primaria.




Gráfica




Sucursales
	id_sucursal
	titulo
	ciudad
	dirección
	telefono_fijo
	Celular
	correo_electronico
	PK
	

	

	

	

	

	

	





Empleados
	id_empleado
	id_sucursal
	cedula
	nombre1
	nombre2
	apellido1
	apellido2
	ciudad
	ubicación
	celular
	correo_electronico
	PK
	FK
	

	

	

	

	

	

	

	

	

	



Clientes
	id_cliente
	cedula
	nombre1
	nombre2
	apellido1
	apellido2
	ciudad
	ubicación
	celular
	correo_electronico
	PK
	

	

	

	

	

	

	

	

	

	



Alquileres
	id_alquiler
	id_sucursal
	id_empleado
	id_vehiculo
	valor_pagado
	valor_cotizado
	fecha_entrega
	fecha_esperada_entrega
	fecha_salida
	PK
	FK
	FK
	FK
	

	

	

	

	

	



Vehiculos
	id_vehiculo
	id_tipo_vehiculo
	id_sucursal
	placa
	modelo
	sunroof
	referencia
	puerta
	capacidad
	color
	motor
	PK
	FK
	FK
	

	

	

	

	

	

	

	

	



Descuento
	id_descuento
	id_tipo_vehiculo
	fecha_inicio
	fecha_fin
	porcentaje_descuento
	PK
	FK
	

	

	

	



Tipo_vehiculo
	id_tipo_vehiculo
	valor_alquiler_semanal
	valor_alquiler_dia
	tipo
	PK
	

	

	

	







































Construcción del Modelo Físico
Se realizó el modelo físico acorde con la elaboración del modelo lógico donde incluye las entidades, sus atributos y las relaciones entre ellas. El objetivo de este modelo es incorporar los tipos de datos de los atributos previamente definidos.
Descripción
El modelo físico se trabaja en MySQL, en el cual cada entidad se representa como una tabla compuesta por sus atributos correspondientes, organizados en columnas con tipos de datos específicos según sea necesario


Tablas


Para crear la base de datos utilice el siguiente comando:


create database AutoRenta_OrtizZully;


Para utilizar la base de datos ocupe el siguiente comando:


use AutoRenta_OrtizZully;


Comenzaremos creando las tablas junto con sus tipos de datos correspondientes. Para esto,
utiliza los siguientes comandos:


1. Creación de la tabla Sucursales:


CREATE TABLE sucursales (
  id_sucursal INT PRIMARY KEY,
  ubicacion VARCHAR(255),
  ciudad VARCHAR(50) ,
  dirección VARCHAR(50) ,
  telefono_fijo VARCHAR(50) ,
  celular VARCHAR(50) ,
  correo_electronico VARCHAR(255)
);




2.  Creación de la tabla tipo_vehiculo:


CREATE TABLE tipo_vehiculo(
    id_tipo_vehiculoINT PRIMARY KEY,
    tipo VARCHAR(250) ,
    valor_alquiler_dia DOUBLE,
    valor_alquiler_semana DOUBLE 
);


3.  Creación de la tabla vehiculos:


CREATE TABLE vehiculos (
  id_vehiculo INT PRIMARY KEY,
  id_tipo_vehiculo INT,
  id_sucursal INT,
  placa VARCHAR(50) ,
  referencia VARCHAR(255),
  modelo VARCHAR(255),
  puertas int,
  capacidad int,
  sunroof BOOLEAN,
  motor VARCHAR(255),
  color VARCHAR(255),
  foreign key (id_tipo_vehiculo) references tipo_vehiculo(id_tipo_vehiculo),
  foreign key (id_sucursal) references sucursales(id_sucursal)
);






4.  Creación de la tabla descuento:


CREATE TABLE descuento (
 id_descuento INT PRIMARY KEY,
 id_tipo_vehiculo INT ,
 fecha_inicio DATE,
 fecha_fin DATE,
 porcentaje_descuento DOUBLE,
  foreign key (id_tipo_vehiculo) references tipo_vehiculo(id_tipo_vehiculo) 
);




5.  Creación de la tabla clientes:


CREATE TABLE clientes (
  id_cliente INT PRIMARY KEY,
  cedula VARCHAR(50) ,
  nombre1 VARCHAR(255) ,
  nombre2 VARCHAR(255) ,
  apellido1 VARCHAR(255) ,
  apellido2 VARCHAR(255) ,
  ubicacion VARCHAR(255),
  ciudad VARCHAR(50) ,
  celular VARCHAR(50) ,
  correo_electronico VARCHAR(255)
);


6. Creación de la tabla empleados:


CREATE TABLE empleados (
  id_empleado INT PRIMARY KEY ,
  Id_sucursal INT ,
  cedula VARCHAR(50) ,
  nombre1 VARCHAR(255) ,
  nombre2 VARCHAR(255) ,
  apellido1 VARCHAR(255) ,
  apellido2 VARCHAR(255) ,
  ubicacion VARCHAR(255),
  ciudad VARCHAR(50) ,
  celular VARCHAR(50) ,
  correo_electronico VARCHAR(255) ,
  foreign key (id_sucursal) references sucursales(id_sucursal)
);


7.  Creación de la tabla empleados:


CREATE TABLE alquileres (
  id_alquiler INT PRIMARY KEY,
  id_vehiculo INT ,
  id_empleado INT ,
  id_sucursal INT ,
  fecha_salida  DATE ,
  fecha_esperada_entrega DATE,
  fecha_entrega  DATE ,
  valor_cotizado DECIMAL(10, 2) ,
  valor_pagado DECIMAL(10, 2),
   foreign key (id_vehiculo) references vehiculos(id_vehiculo),
   foreign key (id_empleado) references empleados(id_empleado),
   foreign key (id_sucursal) references sucursales(id_sucursal)
);










Construcción del Diagrama UML


Se realizó un diagrama UML tomando como referencia la normalización para poder entender mejor cada diseño, la arquitectura del código y la implementación. Dónde nos permitirá tener una visión clara y detallada de cómo se maneja cada consulta de la la empresa AutoRenta.


Descripción


El diagrama UML se diseñó con el objetivo de representar detalladamente la estructura de cada tabla y sus relaciones, donde tendrá así más ganadas unas llaves primarias y foráneas, además especifica obligatoriamente los atributos, dando un nivel de detalle facilitada para poder entenderse con más facilidad.


Comenzaremos creando las tablas junto con sus tipos de datos correspondientes:


1.Tabla Sucursales:


  



2.  Tabla Clientes:
  





3.  Tabla Empleados:


  



4.  Tabla Alquileres:


  



5.  Tabla Vehículos:




  



6. Tabla tipo_vehiculo
  



7.  Tabla tipo descuento:


  



Gráfica


  





Inserciones de Datos
Descripción
Para poder entender mejor el proceso de inserción de datos en la tabla de datos de AutoRental, se deberá insertar datos en todos lo datos creados


1. Tabla Sucursales


  



2. Tabla de tipo_vehiculo:


  

3. Tabla vehículos:


  



4. Tabla descuento:


  

























5. Tabla clientes: 


  



6. Tabla empleados: 


  



7. Tabla Alquileres: